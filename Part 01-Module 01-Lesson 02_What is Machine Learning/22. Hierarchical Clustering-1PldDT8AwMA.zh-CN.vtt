WEBVTT
Kind: captions
Language: zh-CN

00:00:00.690 --> 00:00:04.589
这是有一个方式 让我们给房子分组 不需要提前知道

00:00:04.589 --> 00:00:05.790
聚类的详细数量

00:00:07.139 --> 00:00:10.009
比如房子被排列成这样

00:00:10.009 --> 00:00:12.000
按照下面这么说很有意义

00:00:12.000 --> 00:00:17.179
如果两个房子很近 他们应该由共同的披萨店服务

00:00:17.179 --> 00:00:21.000
按照着这个理念 让我们试试来分组这些房子

00:00:21.000 --> 00:00:24.519
让我们看看哪些房子互相靠得最近

00:00:24.519 --> 00:00:27.160
是这里这两个 所以我们把这两个分到一组

00:00:28.449 --> 00:00:31.730
接下来哪两个是最近的两个房子？

00:00:31.730 --> 00:00:35.170
是这里这两个 让我们把他们分组

00:00:35.170 --> 00:00:40.419
下一组最近的房子是这两个 所以我们把他们分在一组 然后继续

00:00:40.418 --> 00:00:42.969
接下来最近的房子是这里

00:00:42.969 --> 00:00:47.329
现在一些有趣的事情发生了 因为一个房子已经在一个组里面了

00:00:47.329 --> 00:00:51.899
我们要做的就是我们把包含着房子的聚类合在一起

00:00:51.899 --> 00:00:55.030
接下来的两个聚类在这里 所以我们合并这些相关的组

00:00:56.219 --> 00:00:59.280
接下来的两个在这里 我们合并这些组

00:00:59.280 --> 00:01:02.550
现在接下来两个最近的房子是这里这两个

00:01:02.549 --> 00:01:03.799
但是他们已经离得很远了

00:01:03.799 --> 00:01:05.140
所以让我们在这里停下来

00:01:05.140 --> 00:01:08.920
我们做的就是我们挑选一个距离开始 比如说

00:01:08.920 --> 00:01:15.049
无论何时当两个最近的房子是这个距离 我们将会停止算法

00:01:15.049 --> 00:01:19.159
这个将会控制我们想要这些聚类分开多远

00:01:19.159 --> 00:01:22.629
这个算法别称作分层聚类

00:01:22.629 --> 00:01:25.599
所以我们能够看到分层聚类很实用

00:01:25.599 --> 00:01:27.789
当我们不知道聚类数目 但是

00:01:27.790 --> 00:01:30.490
我们知道我们想要这些聚类离得多远

