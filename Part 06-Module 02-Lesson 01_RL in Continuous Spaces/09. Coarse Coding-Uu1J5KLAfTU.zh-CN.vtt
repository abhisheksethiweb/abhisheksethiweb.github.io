WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.850
Coarse Coding 和 Tile Coding 很像

00:00:02.850 --> 00:00:07.650
但是使用一组更稀疏的特征来表示状态空间

00:00:07.650 --> 00:00:11.952
想象一下在二维连续状态空间上放下一堆圆圈

00:00:11.952 --> 00:00:15.359
选择任何一个状态 S 即在该空间中的位置

00:00:15.359 --> 00:00:18.210
并标记它所属的所有圆圈

00:00:18.210 --> 00:00:22.890
构建一个位向量 这些圆圈用 1 表示 剩余圆圈用 0 表示

00:00:22.890 --> 00:00:26.039
这就是状态的稀疏编码表示法

00:00:26.039 --> 00:00:30.765
研究二维空间可以帮助我们直观地感受基本概念

00:00:30.765 --> 00:00:36.969
但是它也可以扩展到更高维度的空间 圆圈变成球面和超球面

00:00:36.969 --> 00:00:39.674
Coarse Coding 具有一些特性

00:00:39.674 --> 00:00:44.589
圆圈越小 空间的泛化程度越低

00:00:44.590 --> 00:00:47.370
学习算法需要持续更长时间

00:00:47.369 --> 00:00:50.655
但是可以获得更有效的分辨率

00:00:50.655 --> 00:00:54.009
圆圈越大 泛化程度越高

00:00:54.009 --> 00:00:56.710
通常会形成更平缓的值函数

00:00:56.710 --> 00:01:00.024
你可以使用更少的大圆圈来涵盖空间

00:01:00.024 --> 00:01:02.670
从而缩小表示法

00:01:02.670 --> 00:01:04.719
但是可能会失去一定的分辨率

00:01:04.719 --> 00:01:08.560
我们不仅可以更改这些圆圈的大小

00:01:08.560 --> 00:01:12.070
还可以从其他方面更改它们 例如更高或更宽

00:01:12.069 --> 00:01:16.384
以便在一个维度里获得更高的分辨率

00:01:16.385 --> 00:01:20.469
实际上 这种技巧可以泛化到几乎任何形状

00:01:20.469 --> 00:01:23.875
和在 Tile Coding 中一样

00:01:23.875 --> 00:01:27.665
Coarse Coding 形成的状态表示法是二元向量

00:01:27.665 --> 00:01:30.359
将每个拼贴或圆圈看做一个特征

00:01:30.359 --> 00:01:31.750
如果是活跃状态 则用 1 表示

00:01:31.750 --> 00:01:32.950
否则用 0 表示

00:01:32.950 --> 00:01:37.329
一个比较自然的扩展方法是

00:01:37.329 --> 00:01:42.469
根据到每个圆圈中心的距离衡量该特征的活跃程度

00:01:42.469 --> 00:01:46.525
可以使用高斯或钟形曲线

00:01:46.525 --> 00:01:50.770
使这种衡量方法或响应更加平缓 曲线在圆圈上居中

00:01:50.769 --> 00:01:53.750
称之为径向基函数

00:01:53.750 --> 00:01:57.069
当然 形成的特征值不再离散化

00:01:57.069 --> 00:02:01.039
因此又是另一个连续状态向量

00:02:01.040 --> 00:02:06.375
但是比较酷的是可以显著降低特征数量

00:02:06.375 --> 00:02:12.000
稍后 当我们讨论函数逼近时 将详细介绍 RBF

