WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.310
好 我们现在来做一件和感知算法一样的事情

00:00:02.310 --> 00:00:06.894
但这次 我们要用到支持向量机算法

00:00:06.894 --> 00:00:08.830
首先 我们来看一下这些点

00:00:08.830 --> 00:00:11.289
蓝点 红点 以及分开它们的这条线

00:00:11.289 --> 00:00:16.535
我们回想一下 这条线的方程是 Wx+b=0

00:00:16.535 --> 00:00:18.420
但现在我们想要的不止是这条线

00:00:18.420 --> 00:00:21.715
我们想要在这条线两侧再加两条线 形成间隔

00:00:21.714 --> 00:00:28.545
这两条线的方程就是 Wx+b=1 和 Wx+b=-1

00:00:28.545 --> 00:00:32.789
我们仍旧想要惩罚这些没有正确分类的点

00:00:32.789 --> 00:00:36.089
但现在 我们要把这个区域看做误分类的点 

00:00:36.090 --> 00:00:40.215
因为我们不希望这两条线之间有任何东西

00:00:40.215 --> 00:00:44.131
记住这一点 我们再次把误差一分为二

00:00:44.131 --> 00:00:47.490
那么 我们有了蓝色误差 但现在的蓝色误差是从

00:00:47.490 --> 00:00:51.615
下面这条线开始的 因为我们也要惩罚间隔里的点

00:00:51.615 --> 00:00:53.730
而红色误差将从上面这条线开始

00:00:53.729 --> 00:00:57.149
同样因为我们要惩罚间隔区域里面的点

00:00:57.149 --> 00:00:59.747
像之前一样将它们分开 正如我所说的

00:00:59.747 --> 00:01:03.089
蓝色误差从底线开始 而红色误差

00:01:03.090 --> 00:01:07.034
从顶线开始 接下来和之前一样

00:01:07.034 --> 00:01:09.644
我们来看 wx+b 的值

00:01:09.644 --> 00:01:13.325
在主线上 Wx+b 等于 0

00:01:13.325 --> 00:01:15.450
慢慢往上 Wx+b 就等于 1 2 3 4 等

00:01:15.450 --> 00:01:18.164
慢慢往下

00:01:18.164 --> 00:01:19.710
Wx+b 就等于 -1 -2 

00:01:19.709 --> 00:01:22.199
-3 等

00:01:22.200 --> 00:01:23.625
为了建立误差

00:01:23.625 --> 00:01:27.665
我们选取它的绝对值 即 1

00:01:27.665 --> 00:01:30.720
那么 蓝色误差从底线开始就是 0

00:01:30.719 --> 00:01:36.484
慢慢增加为 1 2 3 4 等

00:01:36.484 --> 00:01:38.069
同样的

00:01:38.069 --> 00:01:39.854
红色误差从顶线开始也是 0

00:01:39.855 --> 00:01:43.758
往下逐渐反方向递减为 1 

00:01:43.757 --> 00:01:45.789
2 3 4 等

00:01:45.790 --> 00:01:48.810
我们可以看到 蓝色区域内有三个红点

00:01:48.810 --> 00:01:52.320
并且其中两个处在间隔内

00:01:52.319 --> 00:01:55.519
红色区域内有三个蓝点

00:01:55.519 --> 00:01:59.159
它们的值分别为 3.5 

00:01:59.159 --> 00:02:03.000
1.5 和 0.5

00:02:03.000 --> 00:02:08.465
右边的误差分别是 2 3 和 0.3

00:02:08.465 --> 00:02:12.099
我们需要做的就是把这些值加起来 得到误差

00:02:12.099 --> 00:02:16.644
那么 这里的误差是 10.8 简言之

00:02:16.645 --> 00:02:20.810
这就是支持向量机的分类误差

