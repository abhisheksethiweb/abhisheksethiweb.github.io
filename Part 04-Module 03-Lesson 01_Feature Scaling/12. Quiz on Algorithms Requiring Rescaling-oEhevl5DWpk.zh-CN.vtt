WEBVTT
Kind: captions
Language: zh-CN

00:00:00.150 --> 00:00:00.960
Katie 你怎么看的？

00:00:00.960 --> 00:00:02.580
那些是正确答案？

00:00:02.580 --> 00:00:06.130
需要特征缩放的算法时

00:00:06.130 --> 00:00:09.110
SVM 和 K-均值聚类

00:00:09.110 --> 00:00:13.540
在支持向量机和 K-均值聚类中

00:00:13.540 --> 00:00:16.360
计算距离时 你其实是在利用一个维度与另一个维度进行交换

00:00:16.360 --> 00:00:19.160
举个例子 就支持向量机而言

00:00:19.160 --> 00:00:23.030
它有一条将距离最大化的分割线

00:00:23.030 --> 00:00:24.870
你在这里计算距离

00:00:24.870 --> 00:00:29.610
而这个计算就是用一个维度与另一个维度进行交换

00:00:29.610 --> 00:00:33.600
如果我们把某一点的增大至其他点的两倍 那么它的值也会扩大一倍

00:00:33.600 --> 00:00:36.335
K-均值聚类也是这样的

00:00:36.335 --> 00:00:39.360
你有一个集群中心

00:00:39.360 --> 00:00:44.420
然后计算各数据点到集群中心的距离

00:00:44.420 --> 00:00:46.840
该距离具有相同的特征

00:00:46.840 --> 00:00:50.510
如果你将一个变量扩大一倍 它的值也会扩大一倍

00:00:50.510 --> 00:00:52.545
因此 支持向量机和 K-均值聚类

00:00:52.545 --> 00:00:56.700
都会受到特征缩放的影响

00:00:56.700 --> 00:00:59.550
Katie 解释一下决策树和线性回归

00:00:59.550 --> 00:01:01.180
它们为什么不受影响？

00:01:01.180 --> 00:01:04.519
决策树并不会呈现对角线 对吧？

00:01:04.519 --> 00:01:07.910
它会呈现出一系列的水平线和垂线

00:01:07.910 --> 00:01:09.200
所以不存在两者的交换

00:01:09.200 --> 00:01:11.860
它只是在不同的方向上进行切割

00:01:11.860 --> 00:01:14.830
在处理某一维度时

00:01:14.830 --> 00:01:16.370
我们不需要考虑另一个维度的情况

00:01:16.370 --> 00:01:19.260
所以 如果把这个方框缩小一半

00:01:19.260 --> 00:01:22.820
也就是对该特征进行缩放

00:01:22.820 --> 00:01:24.300
图中线条的位置会有所变化

00:01:24.300 --> 00:01:26.700
但分割的顺序是一样的

00:01:26.700 --> 00:01:27.480
它是按比例分割的

00:01:27.480 --> 00:01:31.910
所以 两个变量之间不存在交换

00:01:31.910 --> 00:01:33.760
那线性回归呢？

00:01:33.760 --> 00:01:36.250
它的情况相似

00:01:36.250 --> 00:01:37.980
在线性回归中

00:01:37.980 --> 00:01:41.360
每个特征都有一个相应的系数

00:01:41.360 --> 00:01:44.070
这个系数总是与相应的特征同时出现

00:01:44.070 --> 00:01:46.380
特征 A 的变化不会影响到

00:01:46.380 --> 00:01:47.750
特征 B 的系数

00:01:47.750 --> 00:01:49.360
所以它们的分割方式相同

00:01:49.360 --> 00:01:53.980
事实上 如果你把某一变量的变比例扩大一倍

00:01:53.980 --> 00:01:55.900
它的特征会缩小一半

00:01:55.900 --> 00:01:57.750
但它的输出不会有任何变化

00:01:57.750 --> 00:02:00.340
这一点非常有趣 对于某些算法

00:02:00.340 --> 00:02:05.180
我们可以通过缩放特征来改变结果 但另外一些算法则不会受到影响

