WEBVTT
Kind: captions
Language: pt-BR

00:00:00.150 --> 00:00:00.960
O que você acha, Katie?

00:00:00.960 --> 00:00:02.580
Quais respostas estão corretas aqui?

00:00:02.580 --> 00:00:06.130
&gt;&gt; As respostas corretas, aquelas que precisam de recursos rescaled serão

00:00:06.130 --> 00:00:09.110
SVM e K-MEANS CLUSTERING.

00:00:09.110 --> 00:00:13.540
&gt;&gt; Então tanto nas máquinas de vetor de suporte quanto no agrupamento k-means, você

00:00:13.540 --> 00:00:16.360
troca uma dimensão pela outra quando calcula a distância.

00:00:16.360 --> 00:00:19.160
Vamos usar, por exemplo, máquinas de vetor de suporte.

00:00:19.160 --> 00:00:23.030
Você vê a linha de separação que aumenta a distância.

00:00:23.030 --> 00:00:24.870
Nela você calcula a distância.

00:00:24.870 --> 00:00:29.610
E esse cálculo de distância compensa uma dimensão com a outra.

00:00:29.610 --> 00:00:33.600
Criamos uma dimensão duas vezes maior que a outra, contada duas vezes.

00:00:33.600 --> 00:00:36.335
O mesmo ocorre, coincidentemente, para

00:00:36.335 --> 00:00:39.360
agrupamento K-MEANS, no qual você tem um centro do cluster.

00:00:39.360 --> 00:00:44.420
E você calcula a distância do centro do cluster para todos os pontos de dados.

00:00:44.420 --> 00:00:46.840
E essa distância tem exatamente a mesma caracterização.

00:00:46.840 --> 00:00:50.510
Se você criar uma variável duas vezes maior, ela vai exigir o dobro.

00:00:50.510 --> 00:00:52.545
Assim, as máquinas de vetor de suporte e o

00:00:52.545 --> 00:00:56.700
K-MEANS são afetados pelo redimensionamento de recurso.

00:00:56.700 --> 00:00:59.550
Katie, me fale sobre as árvores de decisão e a regressão linear.

00:00:59.550 --> 00:01:01.180
Por que elas não estão incluídas?

00:01:01.180 --> 00:01:04.519
As árvores de decisão não vão fornecer uma linha diagonal como essa, certo?

00:01:04.519 --> 00:01:07.910
Elas vão fornecer uma série de linhas verticais e horizontais.

00:01:07.910 --> 00:01:09.200
Então não há compensação.

00:01:09.200 --> 00:01:11.860
Basta fazer um corte em uma direção e um corte em outra.

00:01:11.860 --> 00:01:14.830
Você não precisa se preocupar com o que está acontecendo em uma dimensão

00:01:14.830 --> 00:01:16.370
quando está fazendo algo em outra.

00:01:16.370 --> 00:01:19.260
&gt;&gt; E se você comprimir esta pequena área aqui, para metade do tamanho,

00:01:19.260 --> 00:01:22.820
porque redimensiona o recurso onde a linha da imagem está?

00:01:22.820 --> 00:01:24.300
Ela ficará em um local diferente, mas

00:01:24.300 --> 00:01:26.700
a separação é cronologicamente igual à anterior.

00:01:26.700 --> 00:01:27.480
Ela pode ser expandida,

00:01:27.480 --> 00:01:31.910
não há compensação entre essas duas variáveis diferentes.

00:01:31.910 --> 00:01:33.760
E quanto à regressão linear?

00:01:33.760 --> 00:01:36.250
&gt;&gt; Algo semelhante acontece na regressão linear.

00:01:36.250 --> 00:01:37.980
Lembre-se de que na regressão linear,

00:01:37.980 --> 00:01:41.360
cada um de nossos recursos vai ter um coeficiente associado a ele.

00:01:41.360 --> 00:01:44.070
E esse coeficiente e esse recurso sempre ficam juntos.

00:01:44.070 --> 00:01:46.380
O que acontece no recurso A não afeta o

00:01:46.380 --> 00:01:47.750
coeficiente no recurso B.

00:01:47.750 --> 00:01:49.360
Então, eles estão separados da mesma forma.

00:01:49.360 --> 00:01:53.980
&gt;&gt; Na verdade, se você dobrou a escala variável de uma variável específica,

00:01:53.980 --> 00:01:55.900
esse recurso ficará com metade do tamanho.

00:01:55.900 --> 00:01:57.750
E a saída será exatamente igual à anterior.

00:01:57.750 --> 00:02:00.340
É muito interessante ver, e para alguns algoritmos,

00:02:00.340 --> 00:02:05.180
o redimensionamento realmente tem potencial se pudermos usá-lo, para outros não faz diferença.

