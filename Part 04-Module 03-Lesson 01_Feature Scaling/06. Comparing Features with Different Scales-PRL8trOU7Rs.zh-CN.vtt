WEBVTT
Kind: captions
Language: zh-CN

00:00:00.310 --> 00:00:02.620
我得出 Chris 应该与 Sarah 而非 Cameron

00:00:02.620 --> 00:00:05.770
穿同样大小的 T 恤的结论

00:00:05.770 --> 00:00:08.890
依据是 我将针对每个人计算的这些数字进行了比较

00:00:08.890 --> 00:00:13.020
我说 Chris 是与 Cameron 的号码更接近 还是与 Sarah 的号码更接近 

00:00:13.020 --> 00:00:17.980
结果证明 他与 Sarah 的差距约为 26 而与 Cameron 的差距约为 35

00:00:17.980 --> 00:00:19.370
与 Sarah 更接近

00:00:19.370 --> 00:00:23.000
现在 问题在于身高与体重度量标准的两个特征

00:00:23.000 --> 00:00:27.030
身高和体重非常不平衡

00:00:27.030 --> 00:00:30.050
我的意思是 身高的值

00:00:30.050 --> 00:00:34.280
通常介于五和七之间

00:00:34.280 --> 00:00:38.620
而另一方面 体重的值要大得多

00:00:38.620 --> 00:00:42.250
在该示例中是介于 115 和 175 之间

00:00:42.250 --> 00:00:45.700
如果计算两种特征的合计 结果就是

00:00:45.700 --> 00:00:49.530
体重几乎完全主导了你得到的答案

00:00:49.530 --> 00:00:52.470
而身高结果成为舍入误差

00:00:52.470 --> 00:00:56.750
但是你可能希望在进行合计运算时

00:00:56.750 --> 00:00:59.430
两个特征能够得到同等的重视

00:00:59.430 --> 00:01:01.490
此时就用到特征缩放

00:01:01.490 --> 00:01:04.180
这是一种重缩放此类特征的方法

00:01:04.180 --> 00:01:09.980
从而使这些特征跨越的范围有可比性 通常是介于零和一之间

00:01:09.980 --> 00:01:13.600
这样你获得的身高值介于零和一之间

00:01:13.600 --> 00:01:16.040
但仍包含相同的信息

00:01:16.040 --> 00:01:18.300
只是使用的单位不同

00:01:18.300 --> 00:01:21.630
体重也通过零和一之间的值表达

00:01:21.630 --> 00:01:24.970
但信息不会遗漏

00:01:24.970 --> 00:01:29.010
Cameron 最高 Sarah 最矮 只是在更小的范围内表达出来

00:01:29.010 --> 00:01:30.480
这样 当你把这些值合计起来时

00:01:30.480 --> 00:01:33.420
体重不会再完全主导等式

00:01:33.420 --> 00:01:36.390
此时 你应该对 Chris T 恤的大小有

00:01:36.390 --> 00:01:37.880
更为合理的认识

00:01:37.880 --> 00:01:41.120
因为即使他在体重上与 Sarah 更为接近

00:01:41.120 --> 00:01:43.520
但他在身高上与 Cameron 更为接近

00:01:43.520 --> 00:01:45.760
因此 他可能最终会与 Cameron 归到一个组

00:01:45.760 --> 00:01:48.340
在下一个视频中 我会向你展示特征缩放的等式

